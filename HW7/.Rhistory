#############################################################################
############################LOCAL FUNCTIONS##################################
#############################################################################
#
EnsurePackage<-function(x){
x<-as.character(x)
if (!require(x,character.only=TRUE)){
install.packages(pkgs=x, repos="http://cran.r-project.org")
require(x, character.only=TRUE)
}
}
Numberize <- function(inputVector)
{
inputVector <- gsub(",", "", inputVector)
inputVector <- gsub(" ", "", inputVector)
return(as.numeric(inputVector))
}
#Packages
EnsurePackage("gdata")
EnsurePackage("ggmap")
EnsurePackage("ggplot2")
EnsurePackage("here")
EnsurePackage("RJSONIO")
EnsurePackage("mapproj")
EnsurePackage("RCurl")
#DataSets
getwd()
here::here()
EnsurePackage("here")
here::here()
install.packages("here")
EnsurePackage("here")
#DataSets
getwd()
here::here()
csv_import<-read.csv("MedianZIP-3.csv") #moved csv file to the folder R wants it in
csv_import<-read.csv("~\MedianZIP-3.csv") #moved csv file to the folder R wants it in
csv_import<-read.csv("~/MedianZIP-3.csv") #moved csv file to the folder R wants it in
csv_import<-read.csv("MedianZIP-3.csv") #moved csv file to the folder R wants it in
here::here()
csv_import<-read.csv("MedianZIP-3.csv") #moved csv file to the folder R wants it in
View(csv_import)
View(csv_import)
#windows must be placed in users Documents folder C:\Users\Users\username
#mac must be placed in Users root folder Users\username
csv_import<-read.csv("MedianZIP-3.csv" stringsAsFactors = FALSE)
#windows must be placed in users Documents folder C:\Users\Users\username
#mac must be placed in Users root folder Users\username
csv_import<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
View(csv_import)
View(csv_import)
csv_import
source('~/github/IST687-Data-Science/HW7/LewisDB_HW7.R', echo=TRUE)
csv_import<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
csv_backup<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
#############################Problems Solved#################################
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file thatâs not needed
#
#csv_import$zip<-csv_backup$Zip
###b. Update the column names (zip, median, mean, population)
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
View(csv_import)
View(csv_import)
csv_import$population<-Numberize(csv_import$population)
csv_import$zip<-paste(0,csv_import$zip)
csv_import$zip<-gsub(" ", "", csv_import$zip)
##3) Load the "zipcode" package
#
#see imports section
#
##4) Merge the zip code information from the two data frames (merge into one dataframe)
#
data(zipcode)
#
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state NOT IN ('AA','AE','AK','AP','AS','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
zipcode_joincsv<-sqldf("select *
from zipcode
left join (select zip, median, mean, population from csv_import) using (zip)")
zipcode_joincsv<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
zipcode_joincsv$state<-sort(zipcode_joincsv$state)
rownames(zipcode_joincsv)<-NULL
View(zipcode_joincsv)
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-unique(zipcode_joincsv$state)
View(csv_import)
View(csv_import)
View(zipcode)
str(csv_import)
str(zipcode)
joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section
#
data(zipcode)
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
csv_import$population<-Numberize(csv_import$population)
csv_import$zip<-paste(0,csv_import$zip)
csv_import$zip<-gsub(" ", "", csv_import$zip)
##4) Merge the zip code information from the two data frames (merge into one dataframe)
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state NOT IN ('AA','AE','AK','AP','AS','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
zipcode_joincsv<-sqldf("select *
from zipcode
left join (select zip, median, mean, population from csv_import) using (zip)")
joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
zipcode_joincsv$state<-sort(zipcode_joincsv$state)
joincsv_nona$state<-sort(joincsv_nona$state)
rownames(zipcode_joincsv)<-NULL
##4) Merge the zip code information from the two data frames (merge into one dataframe)
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#
zipcode_backup<-zipcode
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state NOT IN ('AA','AE','AK','AP','AS','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
zipcode_joincsv<-sqldf("select *
from zipcode
left join (select zip, median, mean, population from csv_import) using (zip)")
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section
#
data(zipcode)
##4) Merge the zip code information from the two data frames (merge into one dataframe)
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#
zipcode_backup<-zipcode
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state NOT IN ('AA','AE','AK','AP','AS','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
zipcode_joincsv<-sqldf("select *
from zipcode
left join (select zip, median, mean, population from csv_import) using (zip)")
joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
zipcode_joincsv$state<-sort(zipcode_joincsv$state)
joincsv_nona$state<-sort(joincsv_nona$state)
rownames(zipcode_joincsv)<-NULL
zipcode_joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
zipcode_joincsv$state<-sort(zipcode_joincsv$state)
zipcode_joincsv_nona$state<-sort(zipcode_joincsv_nona$state)
rownames(zipcode_joincsv_nona)<-NULL
rm(joincsv_nona)
population<-
median_income<-
step2_df<-df(states,population,median_income)
U
median_income<-NULL
population<-NULL
step2_df<-df(states,population,median_income)
step2_map<-ggplot(data=step2_df aes(x=states))+geom_map(aes(y=population))
step2_map<-ggplot(data=step2_df, aes(x=states))+geom_map(aes(y=population))
step2_map<-ggplot(data=step2_df, map_id=state))
#
##2) Add the state abbreviations and the state names as new columns (make sure the state names are all lower case)
#
states<-state.name
#
##2) Add the state abbreviations and the state names as new columns (make sure the state names are all lower case)
#
states<-to.lower(state.name)
#
##2) Add the state abbreviations and the state names as new columns (make sure the state names are all lower case)
#
states<-tolower(state.name)
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-tolower(state.name)
abv<-unique(zipcode)
abv<-unique(zipcode$state)
abv<-unique(zipcode_backup$state)
abv<-sort(unique(zipcode_backup$state))
abv<-sort(unique(zipcode))
abv<-sort(unique(zipcode$state))
state.name
state$name
state()
state
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-sqldf("SELECT name
FROM state")
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-state
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-tolower(state.name)
satates
states
states(-2)
states[-2]
states<-states[-10]
states
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state NOT IN ('AA','AE','AK','AP','AS','DC','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
zipcode_joincsv<-sqldf("select *
from zipcode
left join (select zip, median, mean, population from csv_import) using (zip)")
zipcode_joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
zipcode_joincsv$state<-sort(zipcode_joincsv$state)
zipcode_joincsv_nona$state<-sort(zipcode_joincsv_nona$state)
rownames(zipcode_joincsv_nona)<-NULL
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-tolower(state.name)
states<-states[-2]
states<-states[-10]
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-tolower(state.name)
abv<-sort(unique(zipcode$state))
#
#Step 2: Show the income & population per state
##1) Create a simpler dataframe, with just the average median income and the the population for each state.
#
states<-tolower(state.name)
states
states<-states[-2,-11]
states<-states[-2]
states<-states[-10]
states
step2_df<-df(states, abv) #, population, median_income)
step2_df<-data.frame(states, abv) #, population, median_income)
View(zipcode_joincsv_nona)
View(zipcode_joincsv_nona)
View(step2_df)
abv<-tolower(states.abv)
abv<-c("AL","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WI","WY")
step2_df<-data.frame(states, abv) #, population, median_income)
View(step2_df)
View(step2_df)
abv<-c("AL","AZ","AR","CA","CO","CT","DE","FL","GA","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY")
step2_df<-data.frame(states, abv) #, population, median_income)
abv<-tolower(c("AL","AZ","AR","CA","CO","CT","DE","FL","GA","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"))
step2_df<-data.frame(states, abv) #, population, median_income)
View(step2_df)
View(step2_df)
csv_import<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
csv_backup<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section
#
data(zipcode)
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
csv_import$population<-Numberize(csv_import$population)
csv_import$zip<-paste(0,csv_import$zip)
csv_import$zip<-gsub(" ", "", csv_import$zip)
##4) Merge the zip code information from the two data frames (merge into one dataframe)
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#
zipcode_backup<-zipcode
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state NOT IN ('AA','AE','AK','AP','AS','DC','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
print(unique(zipcode$states))
print(unique(zipcode$state))
rm(csv_backup)
rm(csv_import)
rm(step2_df)
rm(zipcode)
rm(zipcode_backup)
rm(zipcode_joincsv)
rm(zipcode_joincsv_nona)
rm(abv, median_income)
rm(population,states)
csv_import<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
csv_backup<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section for loading package
#
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
View(csv_import)
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
##4) Merge the zip code information from the two data frames (merge into one dataframe)
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#gnerate zipcode and create backup
data(zipcode)
csv_import$population<-Numberize(csv_import$population)
csv_import$zip<-paste(0,csv_import$zip)
csv_import$zip<-gsub(" ", "", csv_import$zip)
##4) Merge the zip code information from the two data frames (merge into one dataframe)
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#gnerate zipcode and create backup
data(zipcode)
zipcode_backup<-zipcode
#zipcode<- sqldf("SELECT *
#      FROM zipcode
#      WHERE state NOT IN ('AA','AE','AK','AP','AS','DC','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state IN ('AL','AZ','AR','CA','CO','CT','DE','FL','GA','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY') " , row.names=TRUE)
#
zipcode_joincsv<-sqldf("select *
from zipcode
left join (select zip, median, mean, population from csv_import) using (zip)")
View(zipcode_joincsv)
zipcode_joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
zipcode_joincsv$state<-sort(zipcode_joincsv$state)
View(zipcode_joincsv)
join_backup<-zipcode_joincsv_nona
join_backup<-zipcode_joincsv
join_backup<-zipcode_joincsv
zipcode_joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
View(zipcode_joincsv_nona)
zipcode_backup
zipcode
zipcode_joincsv
unique(zipcode_joincsv_nona)
unique(zipcode_joincsv_nona$state)
csv_import<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section for loading package
#
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
csv_import$population<-Numberize(csv_import$population)
csv_import$zip<-paste(0,csv_import$zip)
csv_import$zip<-gsub(" ", "", csv_import$zip)
##4) Merge the zip code information from the two data frames (merge into one dataframe)
##5) Remove Hawaii and Alaska (just focus on the lower 48 states)
#
#gnerate zipcode and create backup#
data(zipcode)
zipcode_backup<-zipcode
#Code to select only the US minus HI,AK, and DC)#
#zipcode<- sqldf("SELECT *
#      FROM zipcode
#      WHERE state NOT IN ('AA','AE','AK','AP','AS','DC','FM','GU','HI','MH','MP','PR','PW','VI') " , row.names=TRUE)
zipcode<- sqldf("SELECT *
FROM zipcode
WHERE state IN ('AL','AZ','AR','CA','CO','CT','DE','FL','GA','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY') " , row.names=TRUE)
#
#Join the zipcode dataset with the csv dataset by matching zipcodes
zipcode$zip<-sort(zipcode$zip)
csv_import$zip<-sort(csv_import$zip)
zipcode_joincsv<-sqldf("select *
from zipcode
left join (select zip, median, mean, population from csv_import) using (zip)")
View(zipcode_joincsv)
#sort the joined data by state abbrivations
zipcode_joincsv$state<-sort(zipcode_joincsv$state)
View(zipcode_joincsv)
unique(zipcode_joincsv$state)
#generate a backup of joined data before cliping all rows with NA
join_backup<-zipcode_joincsv
#clip all rows with an NA field
zipcode_joincsv_nona<-zipcode_joincsv[complete.cases(zipcode_joincsv),]
unique(zipcode_joincsv_nona)
unique(zipcode_joincsv_nona$state)
#clip all rows with an NA field
zipcode_joincsv_nona<-na.omit(zipcode_joincsv)
#reset the row numering for easier access
rownames(zipcode_joincsv_nona)<-NULL
View(zipcode_joincsv_nona)
write.csv(join_backup, "join_test.csv")
#
#Join the zipcode dataset with the csv dataset by matching zipcodes
zipcode_joincsv<-sqldf("SELECT *
FROM zipcode
LEFT JOIN (select zip, median, mean, population from csv_import) using (zip)")
zipcode_joincsv
source('~/github/IST687-Data-Science/HW7/LewisDB_HW7.R')
testing_values<-sqldf("SELECT zip
FROM zipcode
WHERE zipcode.zip IN csv_import.zip")
testing_values<-sqldf("SELECT zip
FROM zipcode
WHERE csv_import.zip IN zip")
testing_values<-sqldf("SELECT zip
FROM zipcode
WHERE csv_import.zip IN zipcode.zip")
testing_values<-sqldf("SELECT zip
FROM zipcode
WHERE csv_import.zip IN zipcode$zip")
testing_values<-sqldf("SELECT zip
FROM zipcode
WHERE csv_import.zip IN zipcode.zip")
testing_values<-compare(zipcode$zip,csv_import$zip,allowALL=TRUE)
EnsurePackage("compare")
install.packages("compare")
library("compare", lib.loc="~/R/R-3.5.2/library")
testing_values<-compare(zipcode$zip,csv_import$zip,allowALL=TRUE)
testing_values<-compare(zipcode$zip,csv_import$zip)
View(testing_values)
testing_values$tM
csv_import$zip<-paste("0",csv_import$zip)
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section for loading package
#
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
csv_import2<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
csv_backup<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
colnames(csv_import2)<-c('zip', 'median', 'mean', 'population')
csv_import2$median<-Numberize(csv_import2$median)
csv_import2$mean<-Numberize(csv_import2$mean)
csv_import2$population<-Numberize(csv_import2$population)
csv_import2$zip<-paste(csv_import2$zip,"0")
csv_import2$zip<-gsub(" ", "", csv_import2$zip)
testing_values<-compare(zipcode$zip,csv_import2$zip)
testing_values$tM
write.csv(zipcode_joincsv, "joineddata.csv")
csv_import$mean<-Numberize(csv_import$mean)
csv_import$population<-Numberize(csv_import$population)
csv_import$zip<-paste("0",csv_import$zip)
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section for loading package
#
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
csv_import$population<-Numberize(csv_import$population)
csv_import$zip<-paste("0",csv_import$zip)
csv_import<-read.csv("MedianZIP-3.csv", stringsAsFactors = FALSE)
#############################################################################
#
#Step 1: Load the Data
##1) Read the data using the gdata package we have previously used.
##2) Clean up the dataframe
###a. Remove any info at the front of the file that not needed
###b. Update the column names (zip, median, mean, population)
##3) Load the "zipcode" package
#see imports section for loading package
#
colnames(csv_import)<-c('zip', 'median', 'mean', 'population')
csv_import$median<-Numberize(csv_import$median)
csv_import$mean<-Numberize(csv_import$mean)
